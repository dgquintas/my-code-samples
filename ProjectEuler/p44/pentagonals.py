# Pentagonal numbers are generated by the formula, Pn=n(3n1)/2. The first ten
# pentagonal numbers are:
# 
# 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
# 
# It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference,
# 70  22 = 48, is not pentagonal.
# 
# Find the pair of pentagonal numbers, Pj and Pk, for which their sum and
# difference is pentagonal and D = |Pk  Pj| is minimised; what is the value of
# D?

from itertools import islice
from math import sqrt

def pentagonal_gen(n):
    while True:
        yield n*(3*n-1) // 2
        n += 1

def is_pentagonal(x):
    return (sqrt(24*x+1)+1) % 6 == 0

def get_n_for_pentagonal(p):
    return (sqrt(24*p+1)+1) / 6 

ps = []
pg = pentagonal_gen(1)
for p in pg:
    done = False
    ps.append(p)
    for q in ps[len(ps)::-1]:
        if is_pentagonal(p-q) and is_pentagonal(p+q):
            print(p,q, get_n_for_pentagonal(p), get_n_for_pentagonal(q))
            print("Actual answer:", p-q)
            done = True
            break
    if done:
        break
    





