Exercise 1.1.  Below is a sequence of expressions. What is the result printed
by the interpreter in response to each expression? Assume that the sequence is
to be evaluated in the order in which it is presented.

(mis respuestas tentativas tras el ->)
(respuestas probadas con mit scheme tras =>)

10 -> 10

(+ 5 3 4) -> 12

(- 9 1) -> 8

(/ 6 2) -> 3 

(+ (* 2 4) (- 4 6)) ->  (+ 8 -2) -> 6

(define a 3) -> nothing printed? nil? => a

(define b (+ a 1)) -> idem => b

(+ a b (* a b)) -> con a=3 y b=a+1=4, (+ 3 4 (* 3 4)) = 3+4+12 = 19

(= a b) -> el nuevo valor de a, 4 => capullo, el operador = es un TEST, no asignacion

(if (and (> b a) (< b (* a b))) -> b, ie 4 => ok
    b
    a)

(cond ((= a 4) 6)            
      ((= b 4) (+ 6 7 a))   -> 16 => ok
      (else 25))

(+ 2 (if (> b a) b a)) -> 6 => ok

(* (cond ((> a b) a)  
         ((< a b) b)  -> 4 * 4 = 16 => ok
         (else -1))
   (+ a 1))
